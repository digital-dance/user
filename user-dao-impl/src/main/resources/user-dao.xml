<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  ">

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="true" />
    </bean>

    <bean name="visDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--		<property name="driverClassName" value="${spring.datasource.driverClassName}" /> -->
        <property name="url" value="${spring.datasource.url}" />
        <property name="username" value="${spring.datasource.username}" />
        <property name="password" value="${spring.datasource.password}" />
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxActive" value="${jdbc.maxActive}" />
        <property name="maxWait" value="${jdbc.maxWait}" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
        <!--	    <property name="logAbandoned" value="${jdbc.logAbandoned}" /> -->
        <property name="filters" value="${spring.datasource.filters}" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <property name="proxyFilters">
            <list>
                <ref bean="log-filter"/>
            </list>
        </property>

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <!--		<property name="filters" value="mergeStat" />-->
    </bean>

    <!--<bean id="visDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
    	<!--<property name="jdbcUrl" value="${user.jdbc.url}" />-->
		<!--<property name="user" value="${user.jdbc.userName}" />-->
		<!--<property name="password" value="${user.jdbc.password}" />-->
        <!--<property name="driverClass" value="${jdbc.driver}" />-->
		<!--<property name="minPoolSize" value="${jdbc.minPoolSize}" />-->
		<!--<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />-->
		<!--<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />-->
		<!--<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />-->
		<!--<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />-->
		<!--<property name="checkoutTimeout" value="${jdbc.acquireCheckoutTimeout}" />-->
    <!--</bean>-->
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="visDataSource" />
        <property name="configLocation" value="classpath:myibatisConfiguration.xml" />
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml" />
		<!--
        <property name="mapperLocations" value="classpath*:com/sirun/vis/dao/*Mapper.xml" />
		-->
    </bean>

    <!-- 配置扫描器 -->
    <!-- 扫描com.sirun.vis.dao这个包以及它的子包下的所有映射接口类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.digital.dance.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- ========================================分隔线========================================= -->
    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="visDataSource" />
    </bean>

<!--     <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> -->
<!--         <tx:attributes> -->
<!--             <tx:method name="add*" propagation="REQUIRED" /> -->
<!--             <tx:method name="append*" propagation="REQUIRED" /> -->
<!--             <tx:method name="insert*" propagation="REQUIRED" /> -->
<!--             <tx:method name="save*" propagation="REQUIRED" /> -->
<!--             <tx:method name="update*" propagation="REQUIRED" /> -->
<!--             <tx:method name="modify*" propagation="REQUIRED" /> -->
<!--             <tx:method name="edit*" propagation="REQUIRED" /> -->
<!--             <tx:method name="delete*" propagation="REQUIRED" /> -->
<!--             <tx:method name="remove*" propagation="REQUIRED" /> -->
<!--             <tx:method name="repair" propagation="REQUIRED" /> -->
<!--             <tx:method name="delAndRepair" propagation="REQUIRED" /> -->
<!--             <tx:method name="get*" propagation="SUPPORTS" /> -->
<!--             <tx:method name="find*" propagation="SUPPORTS" /> -->
<!--             <tx:method name="load*" propagation="SUPPORTS" /> -->
<!--             <tx:method name="search*" propagation="SUPPORTS" /> -->
<!--             <tx:method name="datagrid*" propagation="SUPPORTS" /> -->
<!--             <tx:method name="*" propagation="SUPPORTS" /> -->
<!--         </tx:attributes> -->
<!--     </tx:advice> -->
<!--     <aop:config> -->
<!--         <aop:pointcut id="transactionPointcut" expression="execution(*com.digital.dance.dao..*(..))" /> -->
<!--         <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" /> -->
<!--     </aop:config> -->

   <!-- &lt;!&ndash; 配置druid监控spring jdbc &ndash;&gt;
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>me.gacl.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>-->
    <!--<bean id="contextSource"-->
	    <!--class="org.springframework.ldap.core.support.LdapContextSource">-->
	    <!--<property name="url" value="${PROVIDER_URL}" />-->
	    <!--<property name="base" value="${PRENT_DN}" />-->
	    <!--<property name="userDn" value="${ENCRYPT_USER_DN}" />-->
	    <!--<property name="password" value="${ENCRYPT_SECURITY_CREDENTIALS}" />-->
	    <!--<property name="referral" value="follow"></property>-->
	<!--</bean>-->
	<!--<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">-->
	   <!--<constructor-arg ref="contextSource" />-->
	<!--</bean>-->

    <!--<bean id="ldapUserDao" class="com.digital.dance.dao.impl.LdapUserDaoImpl">-->
    	<!--<constructor-arg ref="contextSource" />-->
    	<!--<property name="dataSource" ref="visDataSource" />-->
		<!--<property name="INITIAL_CONTEXT_FACTORY" value="${INITIAL_CONTEXT_FACTORY}" />-->
		<!--<property name="CONNECT_POOL" value="${CONNECT_POOL}" />-->
		<!--<property name="SECURITY_AUTHENTICATION" value="${SECURITY_AUTHENTICATION}" />-->
		<!--<property name="SECURITY_CREDENTIALS" value="${ENCRYPT_SECURITY_CREDENTIALS}" />-->
		<!--<property name="PROVIDER_URL" value="${PROVIDER_URL}" />-->
		<!--<property name="SECURITY_PRINCIPAL" value="${ENCRYPT_SECURITY_PRINCIPAL}" />-->
		<!--<property name="baseDn" value="${BASE_DN}" />-->
	<!--</bean>-->
</beans>
