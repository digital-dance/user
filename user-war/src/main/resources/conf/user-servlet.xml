<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" 
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	
	<mvc:annotation-driven>
     	<mvc:message-converters register-defaults="true">
		    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
		      <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
		    </bean>
   		</mvc:message-converters>
    </mvc:annotation-driven>
	
	
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> 
			<list> 
				<value>application/json;text/html;charset=UTF-8</value> 
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 <property name="prefix" value="/WEB-INF/page/" /> <property name="suffix" value=".jsp" /> </bean> -->

	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
			</list>
		</property>
	</bean> -->
	
 	<bean id="freemarkerConfig"  
      class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
	    <property name="templateLoaderPath" value="/WEB-INF/pages/" />  
	    <property name="freemarkerSettings">  
	        <props>  
	            <prop key="template_update_delay">0</prop>  
	            <prop key="default_encoding">UTF-8</prop>  
	            <prop key="number_format">0.##########</prop>  
	            <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
	            <prop key="classic_compatible">true</prop>  
	            <prop key="template_exception_handler">ignore</prop>  
	        </props>  
	    </property>  
	</bean>
	<!--视图解析器-->
<!-- 	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->

<!-- 		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> -->
<!-- 		<property name="suffix" value=".jsp" /> -->

<!-- 	</bean> -->
	<mvc:resources mapping="/resources/**" location="/resources/" cache-period="31556926" />
	
	<!-- -->
	<!-- 设置freeMarker的配置文件路径 -->
    <bean id="freemarkerConfiguration"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <!--注释掉的下方代码是指引freemarker的基本信息的配置位置，因为我已经将配置信息移到了applicationContext文件下，所以这里就没必要存在了，不注释也不会有问题的 -->
        <!--<property name="location" value="classpath:/WEB-INF/config/freemarker.properties" />-->
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="exposeRequestAttributes" value="true" />
	    <property name="exposeSessionAttributes" value="true" />
	    <property name="exposeSpringMacroHelpers" value="true" />
	    <property name="requestContextAttribute" value="rc" />
    	
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
        </property>
        <property name="cache"><value>true</value></property>
        <!--这里需要注意一下，我注释了下面这样一行代码，这行代码的意思就是指引freemarker需要解析的文件的位置。注释掉原因是因为
         applicationContext.xml里有这样一行代码：<property name="templateLoaderPath" value="/WEB-INF/views/" /> 已经指定了视图位置。如果我们这里依然保留下方代码，页面回报406的找不到的错误 -->
        <!--<property name="prefix"><value>/WEB-INF/views/</value></property>-->
        <property name="suffix"><value>*</value></property>
        <property name="contentType">
            <value>text/html; charset=UTF-8</value>
        </property>
    </bean>

    <!--这里为可选项-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="utf-8" />
<!-- 	<mvc:resources mapping="/resource/**" location="/resource/" /> -->
 	<mvc:resources mapping="/images/**" location="/images/" />
 	<mvc:resources mapping="/js/**" location="/js/" /> 
 	<mvc:resources mapping="/css/**" location="/css/" /> 
 	<mvc:resources mapping="/fonts/**" location="/fonts/" /> 

	<import resource="classpath*:/user-web.xml" />
	
	

	<!-- 容器默认的DefaultServletHandler处理 所有无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />
</beans>