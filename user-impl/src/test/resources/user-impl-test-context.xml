<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
	 http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="false">

	<bean id="propertyConfigurer"
		class="com.digital.dance.framework.infrastructure.commons.DecryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:**/user-impl-test-system.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8" />
	</bean>
	<bean id="appPropsConfigLocation" class="com.digital.dance.framework.infrastructure.commons.AppPropsConfigLocation">
		<property name="locations">
			<list>
				<value>classpath*:**/user-impl-test-system.properties</value>
			</list>
		</property>		
	</bean>

<bean id="rSACoder" class="com.digital.dance.commons.security.RSACoder">
	<property name="privateKeyFilePath" value="${PRIVATE_KEY_FILE_PATH}" />
	<property name="publicKeyFilePath" value="${PUBLIC_KEY_FILE_PATH}" />
</bean>	
	
	<!--数据持久化文件-->
	    <bean id="visDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    	<property name="jdbcUrl" value="${user.jdbc.url}" />
		<property name="user" value="${user.jdbc.userName}" />
		<property name="password" value="${user.jdbc.password}" />
        <property name="driverClass" value="${jdbc.driver}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="checkoutTimeout" value="${jdbc.acquireCheckoutTimeout}" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="visDataSource" />
        <property name="configLocation" value="classpath:myibatisConfiguration.xml" />
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />		
    </bean>

    <!-- 配置扫描器 -->
    <!-- 扫描com.sirun.vis.dao这个包以及它的子包下的所有映射接口类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.digital.dance.dao" />
    </bean>

    <!-- ========================================分隔线========================================= -->
    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="visDataSource" />
    </bean>
        <bean id="contextSource"                                            
	    class="org.springframework.ldap.core.support.LdapContextSource">
	    <property name="url" value="${PROVIDER_URL}" />         
	    <property name="base" value="${PRENT_DN}" />               
	    <property name="userDn" value="${ENCRYPT_USER_DN}" />             
	    <property name="password" value="${ENCRYPT_SECURITY_CREDENTIALS}" />                  
	    <property name="referral" value="follow"></property>            
	</bean>
	<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
	   <constructor-arg ref="contextSource" />                                
	</bean>                                                                    
     
    <bean id="ldapUserDao" class="com.digital.dance.dao.impl.LdapUserDaoImpl">
    	<constructor-arg ref="contextSource" />
    	<property name="dataSource" ref="visDataSource" />
		<property name="INITIAL_CONTEXT_FACTORY" value="${INITIAL_CONTEXT_FACTORY}" />
		<property name="CONNECT_POOL" value="${CONNECT_POOL}" />
		<property name="SECURITY_AUTHENTICATION" value="${SECURITY_AUTHENTICATION}" />
		<property name="SECURITY_CREDENTIALS" value="${ENCRYPT_SECURITY_CREDENTIALS}" />
		<property name="PROVIDER_URL" value="${PROVIDER_URL}" />
		<property name="SECURITY_PRINCIPAL" value="${ENCRYPT_SECURITY_PRINCIPAL}" />
		<property name="baseDn" value="${BASE_DN}" />
	</bean>
	<!-- <import resource="classpath*:**/user-dao.xml" /> -->
	<import resource="classpath*:**/user-service-test.xml" />
	
	<import resource="classpath*:**/user-dubbo-test.xml" />

		<!-- 添加调度的任务bean 配置对应的class -->
	<!--<bean id="myPullSchedule" class="com.digital.dance.service.impl.LdapUserScheduleServiceImpl">-->
		<!--<property name="ldapUserService" ref="ldapUserService" />-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash;配置调度具体执行的方法 &ndash;&gt;-->
	<!--<bean id="myPullDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
		<!--<property name="targetObject" ref="myPullSchedule" />-->
		<!--<property name="targetMethod" value="pullLDAPUsers" />-->
		<!--<property name="concurrent" value="false" />-->
	<!--</bean>-->
	<!---->
	<!--&lt;!&ndash;配置调度执行的触发的时间 &ndash;&gt;-->
	<!--<bean id="myPuLLTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
		<!--<property name="jobDetail" ref="myPullDetail" />-->
		<!--<property name="cronExpression">-->
			<!--&lt;!&ndash; <value>1.秒 2.分钟 3.小时 4.天 5.月 6.天（星期）</value> &ndash;&gt;-->
			<!--&lt;!&ndash; 0 1/5 3-4 * * ?  &ndash;&gt;-->
			<!--&lt;!&ndash; <value>0 0 1/1 13-18 5 ? 2015/1</value> &ndash;&gt;-->
			<!--&lt;!&ndash; 每年的5月14，18号 1点开始，每隔1小时执行一次 &ndash;&gt;-->
			<!--<value>0 1/5 16-17 * * ?</value>-->
		<!--</property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; quartz的调度工厂 调度工厂只能有一个，多个调度任务在list中添加 &ndash;&gt;-->
	<!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
		<!--<property name="triggers">-->
			<!--<list>-->
				<!--&lt;!&ndash; 所有的调度列表 &ndash;&gt;-->
				<!--<ref local="myPuLLTrigger" />-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->
</beans>
